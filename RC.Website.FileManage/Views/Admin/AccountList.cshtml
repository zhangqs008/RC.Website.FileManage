@{
    ViewBag.Title = "应用服务账户";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    
</style>
<table id="table" class="easyui-datagrid" data-options="
				title: '',
				url: '@Url.Action("AccountPageData", "Account")?_t='+new Date().getTime()+'&searchType=&keyword=*',
                method: 'post',
                singleSelect:false,
				rownumbers: false, 
				idField: 'Id',
                fitColumns:true,
				treeField: 'Title',
                columns:[[ 
                   
                 {field:'Id',title:'编号',width:50,align:'left',formatter: function(value,row,index){return initId(row.value,row,index);},hidden:'true'},
                 {field:'Name',title:'应用名称',width:120,align:'left',formatter: function(value,row,index){return initName(row.value,row,index);}},
                 {field:'AppKey',title:'AppKey',width:250,align:'left',formatter: function(value,row,index){return initAppKey(row.value,row,index);}},
                 {field:'AppSecret',title:'AppSecret',width:250,align:'left',formatter: function(value,row,index){return initAppSecret(row.value,row,index);}},
                 {field:'SavePath',title:'存放路径',width:200,align:'left'},
                 {field:'MaxSize',title:'大小限制',width:80,align:'left',formatter: function(value,row,index){return initMaxSize(row.value,row,index);}},
                 {field:'Count',title:'调用次数',width:80,align:'left',formatter: function(value,row,index){return initCount(row.value,row,index);}},
                 {field:'IsEnable',title:'启用状态',width:80,align:'left',formatter: function(value,row,index){return initIsEnable(row.value,row,index);}},
                 {field:'IsLog',title:'开启日志',width:80,align:'left',formatter: function(value,row,index){return initIsLog(row.value,row,index);}},
                 {field:'CreateDate',title:'创建时间',width:120,align:'left',formatter: function(value,row,index){return initCreateDate(row.value,row,index);}}
                   
                ]],
                toolbar:'#myToolbar',
                pagination:true,
                pageSize:20,
                onClickRow: onClickRow,
                onDblClickRow:onDblClickRow,
                border:0
			">
</table>
<div id="myToolbar" class="datagrid-toolbar">
    <ul class="datagridMenu">
        <li>
            <select class="easyui-combobox" name="searchType" style="width: 110px;">
                <option value="Name" selected="selected">应用名称</option>
                <option value="AppKey">AppKey</option>
                <option value="AppSecret">AppSecret</option>
            </select>
        </li>
        <li>
            <input type="text" id="keyword" style="width: 300px;" name="keyword" class="easyui-textbox" />
            <script type="text/javascript">

                $(function () {
                    var defaultKeyword = "输入关键字以进行搜索(支持回车即搜索)";
                    $("[name='keyword']").prev().val(defaultKeyword);
                    //获取焦点
                    $("[name='keyword']").prev().focus(function () {
                        if ($.trim($(this).val()) == defaultKeyword) {
                            $(this).val("");
                        }
                    });
                    //失去焦点
                    $("[name='keyword']").prev().blur(function () {
                        if ($.trim($(this).val()) == "") {
                            $(this).val(defaultKeyword);
                        }
                    });
                    $("[name='keyword']").prev().bind('keydown',
                        function (e) {
                            var key = e.which;
                            if (key == 13) {
                                e.preventDefault();
                                $(this).blur(); //失去焦点，给隐藏域赋值
                                Search();
                            }
                        });
                });
            </script>
        </li>
        <li><a onclick=" Search(); " href="javascript:void(0)" plain="true" class="easyui-linkbutton"
            data-options="iconCls:'icon-search'" title="搜索">搜索 </a></li>
        <li><a class="easyui-linkbutton" data-options="plain:'true',iconCls:'icon-add'" href=" javascript:void(0); "
            onclick=" Add(); " title="添加">添加</a></li>
        <li><a class="easyui-linkbutton" data-options="plain:'true',iconCls:'icon-edit'"
            href=" javascript:void(0); " onclick=" Edit(); " title="编辑">编辑</a></li>
        <li><a onclick=" Delete(); " href="javascript:void(0)" plain="true" class="easyui-linkbutton"
            data-options="iconCls:'icon-remove'" title="删除">删除 </a></li>
        <li><a onclick=" Reload(); " href="javascript:void(0)" plain="true" class="easyui-linkbutton"
            data-options="iconCls:'icon-reload'" title="刷新">刷新 </a></li>
    </ul>
    <div style="clear: both">
    </div>
</div>
<script type="text/javascript">
    $(function() {

    });
    var editId = 0;

    //行单击事件
    function onClickRow(index, row) {
        editId = row.Id;
    }

    //行双击事件 
    function onDblClickRow(rowIndex, rowData) {
        top.addTab("编辑应用", "@Url.Action("AccountEdit", "Account")/"+rowData.Id);
    }
    //添加
    function Add() {
        top.addTab("添加应用", "@Url.Action("AccountEdit", "Account")");
    }
    //修改
    function Edit() {
        if (editId <= 0) {
            rc.msg.alertErrorMsg("请选择要操作的数据行");
            return;
        }
        top.addTab("编辑应用", "@Url.Action("AccountEdit", "Account")" +"/"+ editId);
    }


    //搜索 
    function Search() {
        $('#table').datagrid('options').url = '@Url.Action("AccountPageData", "Account")?_t=' +
            new Date().getTime() +
            '&searchType=' +
            $("[name='searchType']").val() +
            '&keyword=' +
            escape($("[name='keyword']").val());
        Reload();
    }

    //删除
    function Delete() {
        if (editId <= 0) {
            rc.msg.alertErrorMsg("请选择要操作的数据行");
            return;
        }
        rc.msg.confirm("确定要删除该记录吗？",
            function() {
                rc.loading.add();
                rc.ajax.post('@Url.Action("AccountDelete", "Account")',
                    {
                        data: {
                            id: editId
                        },
                        success: function(response) {
                            rc.loading.remove();
                            if (response.IsSucess) {
                                Reload();
                                rc.msg.confirm("操作成功!<br/><br/>关闭当前窗口？<br/><br/>",
                                    function() {
                                        top.closeTab();
                                    });
                            } else {
                                rc.msg.alertErrorMsg(response.Body);
                            }
                        }
                    });
            });
    }

    //清空 
    function Clear() {
        rc.msg.confirm("删除后将无法还原<br/><br/>确定要删除<span style='color:red'> 列表显示记录 </span>吗？ <br/><br/>",
            function() {
                rc.loading.add();
                var searchType = $("[name='searchType']").val();
                var keyword = escape($("[name='keyword']").val());
                rc.ajax.post('@Url.Action("AccountClear", "Account")',
                    {
                        data: {
                            searchType: searchType,
                            keyword: keyword
                        },
                        success: function(response) {
                            rc.loading.remove();
                            if (response.IsSucess) {
                                //$("[name='keyword']").text("");
                                Reload();
                            } else {
                                rc.msg.alertErrorMsg(response.Body);
                            }
                        }
                    });
            });
    }

    //刷新 
    function Reload() {
        $('#table').datagrid('reload');
        $('#table').datagrid('clearSelections');
        editId = 0;
    }

    function initId(value,row,index){
        return row.Id;
    }
      
    function initGID(value,row,index){
        return row.GID;
    }
      
    function initName(value,row,index){
        return row.Name;
    }
      
    function initAppKey(value,row,index){
        return row.AppKey;
    }
      
    function initAppSecret(value,row,index){
        return row.AppSecret;
    }
      
    function initCount(value,row,index){
        return row.Count;
    }
      
    function initIsEnable(value,row,index){
        return row.IsEnable=="True"?"<span style='color:green'>启用</span>":"<span style='color:red'>禁用</span>";
    }
      
    function initIsLog(value,row,index){
        return row.IsLog=="True"?"<span style='color:green'>启用</span>":"<span style='color:red'>禁用</span>";
    }
       
    function initCreateDate(value,row,index){
        return fixJsonDate(row.CreateDate,"yyyy-MM-dd HH:mm");
    }
      
    var KBCount = 1024;
    var MBCount = KBCount * 1024;
    var GBCount = MBCount * 1024;
    var TBCount = GBCount * 1024;
    function initMaxSize(value, row, index) {
        var size = row.MaxSize; 
        if (KBCount > size){return size+ "B";}
        if (MBCount > size){return (size / KBCount).toFixed(2) + "KB";}
        if (GBCount > size){return (size / MBCount).toFixed(2) + "MB";}
        if (TBCount > size){return (size / GBCount) .toFixed(2)+ "GB";}
        return (size / TBCount) .toFixed(2)+ "TB";
    }

    function initCreateUser(value,row,index){
        return row.CreateUser;
    }
    function  fixJsonDate  (jsonDate, format) {// 发现实体转换的日期会多了8个小时，使用该方法会修正这8个小时
        if (RegExp(/\d{4}-\d+-\d+\s+\d+:\d+:\d+/).test(jsonDate)) {
           return jsonDate;
        }
        var date = null;
        if (RegExp(/\d{4}\/\d+\/\d+\s+\d+:\d+:\d+/).test(jsonDate)) {
            date = new Date(jsonDate);
        } else {
            if (jsonDate) {
                var strDate = jsonDate.replace("/Date(", "").replace(")/", "");
                try {
                    date = new Date(parseInt(strDate) - (8 * 3600 * 1000));
                } catch(ex) {
                }
            }
        }
        if (!date) {
            return "";
        }
        date = { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate(), hour: date.getHours(), minutes: date.getMinutes() };
        switch (format) {
        case '-':
            return date.year + '-' + fixTime(date.month) + '-' + fixTime(date.day);
        case 'zh':
            return date.year + '年' + fixTime(date.month) + '月' + fixTime(date.day) + '日';
        default:
            return date.year + '-' + fixTime(date.month) + '-' + fixTime(date.day) + ' ' + fixTime(date.hour) + ':' + fixTime(date.minutes);
        }
        function fixTime(value) {
            return value.toString().length > 1 ? value : "0" + value;
        }
    }
</script>
